receivers:
  otlp:
    protocols:
      http:
        auth:
          authenticator: basicauth/server

    # Defines a Prometheus configuration set.
  prometheus:
    # Define a set of configurations for scraping by the OpenTelemetry Collector.
    config:
      # The `scrape_configs` section pertains to the Prometheus `scrape_configs`
      # configuration block.
      # See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config
      scrape_configs:
        # Scrape Mimir metrics.
        - job_name: "mimir"
          static_configs:
            - targets: ["mimir:9009"]
              labels:
                service: "mimir"
                group: "infrastructure"

        # Scrape Loki metrics.
        - job_name: "loki"
          static_configs:
            - targets: ["loki:3100"]
              labels:
                service: "loki"
                group: "infrastructure"

        # Scrape Tempo metrics.
        - job_name: "tempo"
          static_configs:
            - targets: ["tempo:3200"]
              labels:
                service: "tempo"
                group: "infrastructure"

        # Scrape Grafana metrics.
        - job_name: "grafana"
          static_configs:
            - targets: ["grafana:3000"]
              labels:
                service: "grafana"
                group: "infrastructure"

extensions:
  basicauth/server:
    htpasswd:
      inline: |
        ${BASIC_AUTH_USERNAME}:${BASIC_AUTH_PASSWORD}

exporters:
  logging:
    loglevel: info

  otlp:
    endpoint: tempo:4317
    tls:
      insecure: true

  prometheusremotewrite:
    endpoint: http://mimir:9009/api/v1/push
    resource_to_telemetry_conversion:
      enabled: true
    tls:
      insecure: true

  loki:
    endpoint: http://loki:3100/loki/api/v1/push

processors:
  batch:

  # The servicegraph processor is used to output service node metrics based on received trace spans.
  servicegraph:
    # Defines which exporter the processor will write metrics to.
    metrics_exporter: prometheusremotewrite
    # Defines additional label dimensions of the metrics from trace span attributes present.
    store: # Configuration for the in-memory store.
      ttl: 2s # Time to wait for an edge to be completed.
      max_items: 200 # Number of edges that will be stored in the storeMap.
    cache_loop: 2m # The timeout used to clean the cache periodically.
    store_expiration_loop: 10s # The timeout used to expire old entries from the store periodically.
    # Virtual node peer attributes allow server nodes to be generated where instrumentation isn't present (eg. where
    # service client calls remotely to a service that does not include instrumentation).
    # Service nodes/edges will be generated for any attribute defined.
    virtual_node_peer_attributes:
      - db.name

  spanmetrics:
    metrics_exporter: prometheusremotewrite

  resource:
    attributes:
      - action: insert
        key: loki.resource.labels
        value: env.id

service:
  extensions: [basicauth/server]

  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp, logging]
    metrics:
      receivers: [otlp, prometheus]
      processors: [batch]
      exporters: [prometheusremotewrite, logging]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [loki, logging]
